# Nginx Configuration for Mysoov.TV on VPS
# This file should be placed in /etc/nginx/sites-available/mysoov.tv
# Then create a symlink: sudo ln -s /etc/nginx/sites-available/mysoov.tv /etc/nginx/sites-enabled/

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name mysoov.tv www.mysoov.tv;

    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server - Backend API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.mysoov.tv;

    # SSL Certificate paths (update after running certbot)
    ssl_certificate /etc/letsencrypt/live/mysoov.tv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mysoov.tv/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Max upload size (adjust based on your needs)
    client_max_body_size 100M;

    # Backend API proxy
    location / {
        proxy_pass http://localhost:5100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeout settings for large file uploads
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }
}

# HTTPS Server - Frontend
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mysoov.tv www.mysoov.tv;

    # SSL Certificate paths
    ssl_certificate /etc/letsencrypt/live/mysoov.tv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mysoov.tv/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Root directory for frontend build
    root /var/www/mysoov/client/dist;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Special handling for social media sharing routes
    # These routes need to return HTML with Open Graph tags from the backend
    location ~ ^/(video|post)/([a-zA-Z0-9]+)$ {
        # Check if it's a bot/crawler
        if ($http_user_agent ~* "facebookexternalhit|Facebot|Twitterbot|LinkedInBot|WhatsApp|Slackbot|TelegramBot|SkypeUriPreview|Googlebot|Bingbot") {
            proxy_pass http://localhost:5100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            break;
        }
        
        # For regular users, serve the SPA
        try_files $uri $uri/ /index.html;
    }

    # Backend API proxy (if using same domain for API)
    location /api {
        proxy_pass http://localhost:5100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # SPA fallback - all other routes go to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }
}